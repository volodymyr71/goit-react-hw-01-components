{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Statistics/Statistics.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","style","profile","description","src","alt","width","label","quantity","FriendListItem","isOnline","item","userOnline","userOffline","FriendList","friends","friendList","map","el","id","Statistics","title","statistics","statList","percentage","backgroundColor","Math","random","toString","substring","defaultProps","TransactionHistory","items","transactionHistory","amount","currency","type","profileUsers","App","statisticsData","transaction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,MAAQ,yB,iBCAxGD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,2BAA2B,WAAa,+BAA+B,YAAc,kC,gBCA5LD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,6BAA6B,KAAO,2B,8PCA7GD,EAAOC,QAAU,CAAC,mBAAqB,iD,i/FCkCxBC,EA/BC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACtCC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAC1B,OACE,mCACE,sBAAKC,UAAWC,IAAMC,QAAtB,UACE,sBAAKF,UAAWC,IAAME,YAAtB,UACE,qBAAKC,IAAKT,EAAQU,IAAKb,EAAMc,MAAM,MAAMN,UAAWC,IAAMN,SAC1D,mBAAGK,UAAWC,IAAMT,KAApB,SAA2BA,IAC3B,mBAAGQ,UAAWC,IAAMR,IAApB,SAA0BA,IAC1B,mBAAGO,UAAWC,IAAMP,SAApB,SAA+BA,OAGjC,qBAAIM,UAAWC,IAAML,MAArB,UACE,+BACE,sBAAMI,UAAWC,IAAMM,MAAvB,wBACA,sBAAMP,UAAWC,IAAMO,SAAvB,SAAkCX,OAEpC,+BACE,sBAAMG,UAAWC,IAAMM,MAAvB,oBACA,sBAAMP,UAAWC,IAAMO,SAAvB,SAAkCV,OAEpC,+BACE,sBAAME,UAAWC,IAAMM,MAAvB,oBACA,sBAAMP,UAAWC,IAAMO,SAAvB,SAAkCT,gB,gBCd/BU,EAVQ,SAAC,GAAgC,IAA9Bd,EAA6B,EAA7BA,OAAQH,EAAqB,EAArBA,KAAMkB,EAAe,EAAfA,SACtC,OACE,qBAAIV,UAAWC,IAAMU,KAArB,UACE,sBAAMX,UAAWU,EAAWT,IAAMW,WAAaX,IAAMY,cACrD,qBAAKb,UAAWC,IAAMN,OAAQS,IAAKT,EAAQU,IAAKb,EAAMc,MAAM,OAC5D,mBAAGN,UAAWC,IAAMT,KAApB,SAA2BA,QCiBlBsB,EApBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,mCACE,oBAAIf,UAAWC,IAAMe,WAArB,SACGD,EAAQE,KAAI,SAACC,GAAQ,IACZvB,EAA+BuB,EAA/BvB,OAAQH,EAAuB0B,EAAvB1B,KAAMkB,EAAiBQ,EAAjBR,SAAUS,EAAOD,EAAPC,GAChC,OACE,cAAC,EAAD,CACExB,OAAQA,EACRH,KAAMA,EACNkB,SAAUA,GACLS,W,gBCZbC,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOzB,EAAY,EAAZA,MAC3B,OACE,mCACE,0BAASI,UAAWC,IAAMqB,WAA1B,UACGD,GAAS,oBAAIrB,UAAWC,IAAMoB,MAArB,0BAEV,oBAAIrB,UAAWC,IAAMsB,SAArB,SACG3B,EAAMqB,KAAI,SAACC,GAAQ,IACVC,EAA0BD,EAA1BC,GAAIZ,EAAsBW,EAAtBX,MAAOiB,EAAeN,EAAfM,WACnB,OACE,qBACExB,UAAWC,IAAMU,KACjBV,MAAO,CAAEwB,gBAiBhB,IAAMC,KAAKC,SAASC,SAAS,IAAIC,UAAU,IAnBtC,UAKE,sBAAM7B,UAAWC,IAAMM,MAAvB,SAA+BA,IAC/B,uBAAMP,UAAWC,IAAMuB,WAAvB,UAAoCA,EAApC,SAHKL,cAaNC,IAMfA,EAAWU,aAAe,CACxBT,MAAO,c,oBCNMU,EA3BY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,wBAAOhC,UAAWC,IAAMgC,mBAAxB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAMf,KAAI,SAACC,GAAQ,IACVgB,EAA+BhB,EAA/BgB,OAAQC,EAAuBjB,EAAvBiB,SAAUC,EAAalB,EAAbkB,KAAMjB,EAAOD,EAAPC,GAChC,OACE,+BACE,6BAAKiB,IACL,6BAAKF,IACL,6BAAKC,MAHEhB,Y,8BCRb3B,EAAuC6C,EAAvC7C,KAAMC,EAAiC4C,EAAjC5C,IAAKC,EAA4B2C,EAA5B3C,SAAUC,EAAkB0C,EAAlB1C,OAAQC,EAAUyC,EAAVzC,MAoBtB0C,MAlBf,WACE,OACE,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,CACER,KAAMA,EACNC,IAAKA,EACLC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,IAGT,cAAC,EAAD,CAAYyB,MAAM,aAAazB,MAAO2C,IACtC,cAAC,EAAD,CAAYxB,QAASA,IACrB,cAAC,EAAD,CAAoBiB,MAAOQ,QCdlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a769928a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3vxhE\",\"description\":\"Profile_description__2UY3T\",\"stats\":\"Profile_stats__1jdWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2FLE8\",\"item\":\"FriendList_item__1No1P\",\"avatar\":\"FriendList_avatar__23i1J\",\"userOnline\":\"FriendList_userOnline__2_jQU\",\"userOffline\":\"FriendList_userOffline__25uPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2VSza\",\"statList\":\"Statistics_statList__TD84c\",\"item\":\"Statistics_item__8PJSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2lPQb\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  const { followers, views, likes } = stats;\r\n  return (\r\n    <>\r\n      <div className={style.profile}>\r\n        <div className={style.description}>\r\n          <img src={avatar} alt={name} width=\"200\" className={style.avatar} />\r\n          <p className={style.name}>{name}</p>\r\n          <p className={style.tag}>{tag}</p>\r\n          <p className={style.location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={style.stats}>\r\n          <li>\r\n            <span className={style.label}>Followers </span>\r\n            <span className={style.quantity}>{followers}</span>\r\n          </li>\r\n          <li>\r\n            <span className={style.label}>Views </span>\r\n            <span className={style.quantity}>{views}</span>\r\n          </li>\r\n          <li>\r\n            <span className={style.label}>Likes </span>\r\n            <span className={style.quantity}>{likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport style from \"./FriendList.module.css\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={style.item}>\r\n      <span className={isOnline ? style.userOnline : style.userOffline}></span>\r\n      <img className={style.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={style.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport style from \"./FriendList.module.css\";\r\nimport FriendListItem from \"./FriendListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <>\r\n      <ul className={style.friendList}>\r\n        {friends.map((el) => {\r\n          const { avatar, name, isOnline, id } = el;\r\n          return (\r\n            <FriendListItem\r\n              avatar={avatar}\r\n              name={name}\r\n              isOnline={isOnline}\r\n              key={id}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport style from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <>\r\n      <section className={style.statistics}>\r\n        {title && <h2 className={style.title}>Upload stats</h2>}\r\n\r\n        <ul className={style.statList}>\r\n          {stats.map((el) => {\r\n            const { id, label, percentage } = el;\r\n            return (\r\n              <li\r\n                className={style.item}\r\n                style={{ backgroundColor: getRandomColor() }}\r\n                key={id}\r\n              >\r\n                <span className={style.label}>{label}</span>\r\n                <span className={style.percentage}>{percentage}%</span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nfunction getRandomColor() {\r\n  return \"#\" + Math.random().toString(16).substring(9);\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  title: \"Statistics\",\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport style from \"./TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={style.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((el) => {\r\n          const { amount, currency, type, id } = el;\r\n          return (\r\n            <tr key={id}>\r\n              <td>{type}</td>\r\n              <td>{amount}</td>\r\n              <td>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import \"./App.css\";\nimport Profile from \"./components/Profile/Profile\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nimport profileUsers from \"./db/user.json\";\nimport statisticsData from \"./db/statistical-data.json\";\nimport friends from \"./db/friends.json\";\nimport transaction from \"./db/transactions.json\";\n\nconst { name, tag, location, avatar, stats } = profileUsers;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={name}\n        tag={tag}\n        location={location}\n        avatar={avatar}\n        stats={stats}\n      />\n\n      <Statistics title=\"statistics\" stats={statisticsData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transaction} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}